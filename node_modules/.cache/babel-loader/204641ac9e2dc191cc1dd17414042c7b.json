{"ast":null,"code":"var _jsxFileName = \"/home/utsav.goel/Desktop/Reacttask/src/page/signup.js\",\n    _s = $RefreshSig$();\n\n// import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport React, { useEffect, useState } from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport Paper from '@mui/material/Paper';\nimport { Header } from \"../module/index\";\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { useLocation, useNavigate } from \"react-router\";\nimport { Validation } from '../components/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Signup = () => {\n  _s();\n\n  // useEffect(()=>{\n  //   if(localStorage.getItem('registerData')){\n  //     navigator('./signup')\n  //   }\n  // },[])\n  const [values, setValues] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  const [errors, setErrors] = useState({});\n\n  const handleChange = event => {\n    setValues({ ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const navigator = useNavigate();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault(); // setErrors(Validation(values));\n\n    setErrors(Validation(values));\n    console.log(name, email, password);\n    const data = {\n      name: name,\n      email: email,\n      password: password\n    }; // getItem function use to retrieve data from LocalStorage\n\n    let signupData = localStorage.getItem('registerData');\n\n    if (signupData == null) {\n      signupData = [];\n      signupData.push(data);\n      localStorage.setItem('registerData', JSON.stringify(signupData));\n    } else {\n      let newDetail = JSON.parse(signupData);\n      newDetail.push(data);\n      e.preventDefault();\n      localStorage.setItem(\"registerData\", JSON.stringify(newDetail));\n    }\n\n    ;\n    const message = \"Signup Successfully\";\n    navigator('/loginup', {\n      state: message\n    });\n  };\n\n  const paperStyle = {\n    padding: \"10px 20px\",\n    width: 350,\n    margin: \"0px auto\"\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 20,\n      style: paperStyle,\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        component: \"main\",\n        maxWidth: \"xs\",\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            marginTop: 0,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            sx: {\n              m: 1,\n              bgcolor: 'secondary.main'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h1\",\n            variant: \"h5\",\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            component: \"form\",\n            noValidate: true,\n            sx: {\n              mt: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              sx: {\n                backgroundColor: 'lightgrey'\n              },\n              margin: \"normal\",\n              required: true,\n              fullWidth: true,\n              id: \"name\",\n              label: \"Name\",\n              name: \"name\",\n              value: values.name,\n              onChange: e => setName(e.target.value),\n              onChange: handleChange,\n              autoComplete: \"name\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 11\n            }, this), errors.name && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error\",\n              children: errors.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 32\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              sx: {\n                backgroundColor: 'lightgrey'\n              },\n              margin: \"normal\",\n              required: true,\n              fullWidth: true,\n              id: \"email\",\n              label: \"Email Address\",\n              name: \"email\" // validate={validateEmail}\n              ,\n              value: values.email,\n              onChange: e => setEmail(e.target.value),\n              onChange: handleChange,\n              autoComplete: \"email\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 13\n            }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error\",\n              children: errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              sx: {\n                backgroundColor: 'lightgrey'\n              },\n              margin: \"normal\",\n              required: true,\n              fullWidth: true,\n              name: \"password\",\n              label: \"Password\",\n              type: \"password\",\n              id: \"password\",\n              value: values.password,\n              onChange: e => setPassword(e.target.value),\n              onChange: handleChange,\n              autoComplete: \"current-password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 13\n            }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error\",\n              children: errors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 36\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                value: \"remember\",\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 24\n              }, this),\n              label: \"Remember me\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              fullWidth: true,\n              variant: \"contained\",\n              sx: {\n                mt: 3,\n                mb: 2\n              },\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 1\n    }, this)\n  }, void 0, false);\n};\n\n_s(Signup, \"sCR55JAJIQpTb19K9Oo5su4w+7s=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/home/utsav.goel/Desktop/Reacttask/src/page/signup.js"],"names":["Link","React","useEffect","useState","Avatar","Button","Paper","Header","TextField","FormControlLabel","Checkbox","Box","Typography","Container","useLocation","useNavigate","Validation","Signup","values","setValues","name","email","password","errors","setErrors","handleChange","event","target","value","navigator","setName","setEmail","setPassword","handleSubmit","e","preventDefault","console","log","data","signupData","localStorage","getItem","push","setItem","JSON","stringify","newDetail","parse","message","state","paperStyle","padding","width","margin","marginTop","display","flexDirection","alignItems","m","bgcolor","mt","backgroundColor","mb"],"mappings":"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","sourcesContent":["// import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport React, { useEffect, useState } from 'react'\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport Paper from '@mui/material/Paper';\nimport { Header } from \"../module/index\";\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { useLocation, useNavigate} from \"react-router\";\nimport { Validation  } from '../components/index';\n\n\nconst Signup=()=>{\n\n  // useEffect(()=>{\n  //   if(localStorage.getItem('registerData')){\n  //     navigator('./signup')\n  //   }\n  // },[])\nconst [values, setValues]= useState({\n  name: \"\",\n  email: \"\",\n  password: \"\",\n});\n\nconst [errors, setErrors] = useState({});\n\nconst handleChange =(event) => {\n  setValues({\n   ...values,\n   [event.target.name]: event.target.value,\n  });\n};\n  const navigator = useNavigate();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // setErrors(Validation(values));\n    setErrors(Validation(values));\n    console.log(name, email, password);\n    const data = {name:name, email:email, password:password}\n\n// getItem function use to retrieve data from LocalStorage\n    let signupData = localStorage.getItem('registerData');\n    if(signupData==null){\n      signupData=[]\n      signupData.push(data);\n      localStorage.setItem('registerData',JSON.stringify(signupData))\n    }else{\n      let newDetail = JSON.parse(signupData)\n      newDetail.push(data)\n      e.preventDefault();\n      localStorage.setItem(\"registerData\",JSON.stringify(newDetail))\n     \n    };\n    const message = \"Signup Successfully\";\n    navigator('/loginup',{state:message})\n    }\n\n  const paperStyle={padding: \"10px 20px\", width:350, margin:\"0px auto\"}\n  return (\n <>\n {/* <Header/> */}\n<Paper elevation={20} style={paperStyle} >\n      <Container component=\"main\" maxWidth=\"xs\" onSubmit={handleSubmit}>\n        <Box\n          sx={{\n            marginTop: 0,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}>\n             <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <Box component=\"form\" noValidate sx={{ mt: 1 }}>\n          <TextField sx={{backgroundColor: 'lightgrey'}}\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"name\"\n              label=\"Name\"\n              name=\"name\"\n              value={values.name}\n              onChange={e => setName(e.target.value)}\n              onChange={handleChange}\n              autoComplete=\"name\"\n              autoFocus/>\n               {errors.name && <p className=\"error\">{errors.name}</p>}\n\n            <TextField sx={{backgroundColor: 'lightgrey'}}\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              // validate={validateEmail}\n              value={values.email}\n              onChange={e => setEmail(e.target.value)}\n              onChange={handleChange}\n              autoComplete=\"email\"\n              autoFocus\n            />\n           \n             {errors.email && <p className=\"error\">{errors.email}</p>}\n\n            <TextField sx={{backgroundColor: 'lightgrey'}}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              value={values.password}\n              onChange={e => setPassword(e.target.value)}\n              onChange={handleChange}\n              autoComplete=\"current-password\"/>\n               {errors.password && <p className=\"error\">{errors.password}</p>}\n         \n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\" />\n      \n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }} >\n              Sign Up\n            </Button>\n          </Box>\n        </Box>\n      </Container>\n      </Paper>                            \n</> \n  );\n}\nexport default Signup;"]},"metadata":{},"sourceType":"module"}