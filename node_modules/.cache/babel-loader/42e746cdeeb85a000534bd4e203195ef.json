{"ast":null,"code":"var _jsxFileName = \"/home/utsav.goel/Desktop/Reacttask/src/page/signup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Header } from \"../module/index\";\nimport { Grid, Paper, Avatar, Typography, TextField, Button } from '@mui/material';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\nimport { display } from '@mui/system';\nimport Box from '@mui/material/Box';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Select from '@mui/material/Select';\nimport { Email } from '@mui/icons-material';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModalPage = () => {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const paperStyle = {\n    padding: \"10px 20px\",\n    width: 350,\n    margin: \"0px auto\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      onClick: handleClickOpen,\n      children: \"Open Registration form dialog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        align: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 0,\n          style: paperStyle,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Registration\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              children: \"PLease Fill this form\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 16\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Name\",\n            value: username,\n            onChange: e => setUsername(e.target.value),\n            placeholder: \"Enter your name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Email\",\n            id: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            component: \"fieldset\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              component: \"legend\",\n              children: \"Gender\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 3\n            }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n              \"aria-label\": \"gender\",\n              defaultValue: \"female\",\n              name: \"radio-buttons-group\",\n              style: {\n                display: 'initial'\n              },\n              value: employeeGender,\n              label: \"Gender\",\n              onChange: e => setEmployeeGender(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                value: \"male\",\n                control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 45\n                }, this),\n                label: \"Male\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                value: \"female\",\n                control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 47\n                }, this),\n                label: \"Female\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 5\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 3\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"demo-simple-select-label\",\n              children: \"Field\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 3\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"demo-simple-select-label\",\n              id: \"demo-simple-select\",\n              value: employeeRole,\n              label: \"Role\",\n              onChange: e => setEmployeeRole(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 10,\n                children: \"Trainee\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 20,\n                children: \"Trainer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 30,\n                children: \"Expert\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 5\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 3\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 4\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            sx: {\n              width: '39ch'\n            },\n            children: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n              placeholder: \"Please enter text\",\n              value: employeeText,\n              label: \"Text\",\n              onChange: e => setEmployeeText(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 3\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"Submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleSubmit,\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 2\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleClose,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 7\n  }, this);\n};\n\n_s(ModalPage, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n\n_c = ModalPage;\nexport default ModalPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalPage\");","map":{"version":3,"sources":["/home/utsav.goel/Desktop/Reacttask/src/page/signup.js"],"names":["React","useState","Header","Grid","Paper","Avatar","Typography","TextField","Button","Radio","RadioGroup","FormControlLabel","FormControl","FormLabel","display","Box","Dialog","DialogActions","InputLabel","MenuItem","IconButton","CloseIcon","Select","Email","OutlinedInput","FormHelperText","ModalPage","open","setOpen","handleClickOpen","handleClose","paperStyle","padding","width","margin","username","e","setUsername","target","value","email","setEmail","employeeGender","setEmployeeGender","employeeRole","setEmployeeRole","employeeText","setEmployeeText","handleSubmit"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Header } from \"../module/index\";\nimport {Grid, Paper, Avatar, Typography, TextField, Button} from '@mui/material'\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\nimport { display } from '@mui/system';\nimport Box from '@mui/material/Box';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Select from '@mui/material/Select';\nimport { Email } from '@mui/icons-material';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport FormHelperText from '@mui/material/FormHelperText';\n\n\n\nconst ModalPage=()=>{\nconst [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n      setOpen(true);\n    };\n\n    const handleClose = () => {\n      setOpen(false);\n    };\n\n\n\n    const paperStyle={padding: \"10px 20px\", width:350, margin:\"0px auto\"}\n    return(\n   \n      <div>\n   <Header/>\n<Button variant=\"outlined\" onClick={handleClickOpen}>\n        Open Registration form dialog\n      </Button>\n      <Dialog open={open} onClose={handleClose}>\n        <Grid align=\"center\">\n        <Paper elevation={0} style={paperStyle} >\n\n           <Grid>\n               <Avatar>\n\n               </Avatar>\n               \n               <h2>Registration</h2>\n               <Typography variant=\"caption\">PLease Fill this form</Typography>\n           </Grid>\n            \n                <TextField fullWidth label=\"Name\"  value={username} onChange={(e)=> setUsername(e.target.value)} placeholder=\"Enter your name\" />\n                <TextField fullWidth label=\"Email\" id=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\n                <FormControl component=\"fieldset\">\n  <FormLabel component=\"legend\">Gender</FormLabel>\n  <RadioGroup aria-label=\"gender\" defaultValue=\"female\" name=\"radio-buttons-group\" style={{display:'initial'}}value={employeeGender} label=\"Gender\" onChange={(e)=> setEmployeeGender(e.target.value)} >\n    <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\n    <FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\n    {/* <FormControlLabel value=\"other\" control={<Radio />} label=\"Other\" /> */}\n  </RadioGroup>\n</FormControl>\n   <FormControl fullWidth>\n  <InputLabel id=\"demo-simple-select-label\">Field</InputLabel>\n  <Select labelId=\"demo-simple-select-label\" id=\"demo-simple-select\" value={employeeRole} label=\"Role\" onChange={(e)=> setEmployeeRole(e.target.value)} >\n    <MenuItem value={10}>Trainee</MenuItem>\n    <MenuItem value={20}>Trainer</MenuItem>\n    <MenuItem value={30}>Expert</MenuItem>\n  </Select>\n</FormControl>\n\n<FormControl sx={{ width: '39ch' }}>\n  <OutlinedInput placeholder=\"Please enter text\" value={employeeText} label=\"Text\" onChange={(e)=> setEmployeeText(e.target.value)} />\n</FormControl>\n\n <Button type= \"Submit\" variant=\"contained\" color=\"primary\" onClick={handleSubmit}>Register</Button>\n<Button onClick={handleClose}>Cancel</Button>\n</Paper>\n  </Grid>\n </Dialog>\n      \n      \n        </div>\n    )\n}\n\nexport default ModalPage;"]},"metadata":{},"sourceType":"module"}