{"ast":null,"code":"var _jsxFileName = \"/home/utsav.goel/Desktop/Reacttask/src/page/editUser.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { FormGroup, FormControl, InputLabel, Input, Button, makeStyles, Typography } from '@material-ui/core';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { getUsers, editUser } from '../api/get';\nimport { AllUsers } from '../api/alluser';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValue = {\n  name: '',\n  username: '',\n  email: '',\n  phone: ''\n};\nconst useStyles = makeStyles({\n  container: {\n    width: '50%',\n    margin: '5% 0 0 25%',\n    '& > *': {\n      marginTop: 20\n    }\n  }\n});\n\nconst EditUser = () => {\n  _s();\n\n  // console.log(initialValue);\n  // const id= editUser.id;\n  const [user, setUser] = useState(initialValue);\n  const {\n    name,\n    username,\n    email,\n    phone\n  } = user;\n  const {\n    id\n  } = useParams(); // console.log(id)\n\n  const classes = useStyles();\n  let navigator = useNavigate();\n  useEffect(() => {\n    loadUserDetails();\n  }, []);\n\n  const loadUserDetails = async () => {\n    const response = await getUsers(id);\n    setUser(response.data); // console.log(\"hello\")\n  }; // const [open, setOpen] = React.useState(false);\n\n\n  const editUserDetails = async () => {\n    // e.preventDefault();\n    const response = await editUser(id, user);\n    navigator.push('/editUser'); // setOpen(true);\n    // console.log(\"editUser\")\n  };\n\n  const onValueChange = e => {\n    // e.preventDefault();\n    console.log(e.target.value);\n    setUser({ ...user,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormGroup, {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      children: \"Edit Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"my-input\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        onChange: e => onValueChange(e),\n        name: \"name\",\n        value: name,\n        id: \"my-input\",\n        \"aria-describedby\": \"my-helper-text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"my-input\",\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        onChange: e => onValueChange(e),\n        name: \"username\",\n        value: username,\n        id: \"my-input\",\n        \"aria-describedby\": \"my-helper-text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"my-input\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        onChange: e => onValueChange(e),\n        name: \"email\",\n        value: email,\n        id: \"my-input\",\n        \"aria-describedby\": \"my-helper-text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"my-input\",\n        children: \"Phone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        onChange: e => onValueChange(e),\n        name: \"phone\",\n        value: phone,\n        id: \"my-input\",\n        \"aria-describedby\": \"my-helper-text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => editUserDetails(),\n        children: \"Edit User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditUser, \"myHgrBC1YyUweYv6tqZejqphUJ4=\", false, function () {\n  return [useParams, useStyles, useNavigate];\n});\n\n_c = EditUser;\nexport default EditUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditUser\");","map":{"version":3,"sources":["/home/utsav.goel/Desktop/Reacttask/src/page/editUser.js"],"names":["useState","useEffect","FormGroup","FormControl","InputLabel","Input","Button","makeStyles","Typography","useParams","useNavigate","getUsers","editUser","AllUsers","React","initialValue","name","username","email","phone","useStyles","container","width","margin","marginTop","EditUser","user","setUser","id","classes","navigator","loadUserDetails","response","data","editUserDetails","push","onValueChange","e","console","log","target","value"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { FormGroup, FormControl, InputLabel, Input, Button, makeStyles, Typography } from '@material-ui/core';\nimport {  useParams, useNavigate} from 'react-router-dom';\nimport { getUsers, editUser } from '../api/get';\nimport {AllUsers} from '../api/alluser'\nimport React from 'react';\nconst initialValue = {\n\n    name: '',\n    username: '',\n    email: '',\n    phone: ''\n}\n\nconst useStyles = makeStyles({\n    container: {\n        width: '50%',\n        margin: '5% 0 0 25%',\n        '& > *': {\n            marginTop: 20\n        }\n    }\n})\n\nconst EditUser = () => {\n    // console.log(initialValue);\n    // const id= editUser.id;\n  \n    const [user, setUser] = useState(initialValue);\n    const { name, username, email, phone } = user;\n    const { id} = useParams();\n    // console.log(id)\n    const classes = useStyles();\n    let navigator = useNavigate();\n\n    useEffect(() => {\n        loadUserDetails();\n    }, []);\n\n    const loadUserDetails = async() => {\n        const response = await getUsers(id);\n\n        setUser(response.data);\n        // console.log(\"hello\")\n    }\n    // const [open, setOpen] = React.useState(false);\n    const editUserDetails = async() => {\n        // e.preventDefault();\n        const response = await editUser(id, user);\n        navigator.push('/editUser');\n        // setOpen(true);\n       \n        // console.log(\"editUser\")\n       \n       \n    }\n\n    const onValueChange = (e) => {\n        // e.preventDefault();\n        console.log(e.target.value);\n        setUser({...user, [e.target.name]: e.target.value})\n    }\n\n    return (\n        <FormGroup className={classes.container}>\n            <Typography variant=\"h4\">Edit Information</Typography>\n            <FormControl>\n                <InputLabel htmlFor=\"my-input\">Name</InputLabel>\n                <Input onChange={(e) => onValueChange(e)} name='name' value={name} id=\"my-input\" aria-describedby=\"my-helper-text\" />\n            </FormControl>\n            <FormControl>\n                <InputLabel htmlFor=\"my-input\">Username</InputLabel>\n                <Input onChange={(e) => onValueChange(e)} name='username' value={username} id=\"my-input\" aria-describedby=\"my-helper-text\" />\n            </FormControl>\n            <FormControl>\n                <InputLabel htmlFor=\"my-input\">Email</InputLabel>\n                <Input onChange={(e) => onValueChange(e)} name='email' value={email} id=\"my-input\" aria-describedby=\"my-helper-text\" />\n            </FormControl>\n            <FormControl>\n                <InputLabel htmlFor=\"my-input\">Phone</InputLabel>\n                <Input onChange={(e) => onValueChange(e)} name='phone' value={phone} id=\"my-input\" aria-describedby=\"my-helper-text\" />\n            </FormControl>\n            <FormControl>\n                \n                <Button variant=\"contained\" color=\"primary\" onClick={() => editUserDetails()}>Edit User</Button>\n            </FormControl>\n        </FormGroup>\n    )\n}\n\nexport default EditUser;"]},"metadata":{},"sourceType":"module"}