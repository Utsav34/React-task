{"ast":null,"code":"var _jsxFileName = \"/home/utsav.goel/Desktop/Reacttask/src/components/try.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { FormGroup, FormControl, InputLabel, Input, Button, makeStyles, Typography } from '@material-ui/core';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { getUsers, editUser } from '../api/get';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValue = {\n  name: '',\n  username: '',\n  email: '',\n  phone: ''\n};\nconst useStyles = makeStyles({\n  container: {\n    width: '50%',\n    margin: '5% 0 0 25%',\n    '& > *': {\n      marginTop: 20\n    }\n  }\n});\n\nconst Try = () => {\n  _s();\n\n  const [user, setUser] = useState(initialValue);\n  const {\n    name,\n    username,\n    email,\n    phone\n  } = user;\n  const {\n    id\n  } = useParams();\n  const classes = useStyles();\n  let navigator = useNavigate();\n  useEffect(() => {\n    loadUserDetails();\n  }, []);\n\n  const loadUserDetails = async () => {\n    const response = await getUsers(id);\n    setUser(response.data);\n  };\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const editUserDetails = async () => {\n    const response = await editUser(id, user);\n    history.push('/all');\n  };\n\n  const onValueChange = e => {\n    console.log(e.target.value);\n    setUser({ ...user,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      onClick: handleClickOpen,\n      children: \"Try\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      className: classes.container,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: \"Edit Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"my-input\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          onChange: e => onValueChange(e),\n          name: \"name\",\n          value: name,\n          id: \"my-input\",\n          \"aria-describedby\": \"my-helper-text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"my-input\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          onChange: e => onValueChange(e),\n          name: \"username\",\n          value: username,\n          id: \"my-input\",\n          \"aria-describedby\": \"my-helper-text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"my-input\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          onChange: e => onValueChange(e),\n          name: \"email\",\n          value: email,\n          id: \"my-input\",\n          \"aria-describedby\": \"my-helper-text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"my-input\",\n          children: \"Phone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          onChange: e => onValueChange(e),\n          name: \"phone\",\n          value: phone,\n          id: \"my-input\",\n          \"aria-describedby\": \"my-helper-text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => editUserDetails(),\n          children: \"Edit User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 1\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Try, \"r3f7aon+mjX31SMLKKkff8R9rdk=\", false, function () {\n  return [useParams, useStyles, useNavigate];\n});\n\n_c = Try;\nexport default Try;\n\nvar _c;\n\n$RefreshReg$(_c, \"Try\");","map":{"version":3,"sources":["/home/utsav.goel/Desktop/Reacttask/src/components/try.js"],"names":["useState","useEffect","FormGroup","FormControl","InputLabel","Input","Button","makeStyles","Typography","useNavigate","useParams","getUsers","editUser","React","initialValue","name","username","email","phone","useStyles","container","width","margin","marginTop","Try","user","setUser","id","classes","navigator","loadUserDetails","response","data","open","setOpen","handleClickOpen","editUserDetails","history","push","onValueChange","e","console","log","target","value"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { FormGroup, FormControl, InputLabel, Input, Button, makeStyles, Typography } from '@material-ui/core';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { getUsers, editUser } from '../api/get';\nimport React from 'react'\nconst initialValue = {\nname: '',\nusername: '',\nemail: '',\nphone: ''\n}\n\nconst useStyles = makeStyles({\ncontainer: {\nwidth: '50%',\nmargin: '5% 0 0 25%',\n'& > *': {\nmarginTop: 20\n}\n}\n})\n\nconst Try = () => {\nconst [user, setUser] = useState(initialValue);\nconst { name, username, email, phone } = user;\nconst { id } = useParams();\nconst classes = useStyles();\nlet navigator = useNavigate();\n\nuseEffect(() => {\nloadUserDetails();\n}, []);\n\nconst loadUserDetails = async() => {\nconst response = await getUsers(id);\nsetUser(response.data);\n}\nconst [open, setOpen] = React.useState(false);\nconst handleClickOpen = () => {\n    setOpen(true);\n  };\nconst editUserDetails = async() => {\nconst response = await editUser(id, user);\nhistory.push('/all');\n}\n\nconst onValueChange = (e) => {\nconsole.log(e.target.value);\nsetUser({...user, [e.target.name]: e.target.value})\n}\n\nreturn (\n    <div>\n        <Button variant=\"outlined\" onClick={handleClickOpen}>\n        Try\n      </Button>\n<FormGroup className={classes.container}>\n<Typography variant=\"h4\">Edit Information</Typography>\n<FormControl>\n<InputLabel htmlFor=\"my-input\">Name</InputLabel>\n<Input onChange={(e) => onValueChange(e)} name='name' value={name} id=\"my-input\" aria-describedby=\"my-helper-text\" />\n</FormControl>\n<FormControl>\n<InputLabel htmlFor=\"my-input\">Username</InputLabel>\n<Input onChange={(e) => onValueChange(e)} name='username' value={username} id=\"my-input\" aria-describedby=\"my-helper-text\" />\n</FormControl>\n<FormControl>\n<InputLabel htmlFor=\"my-input\">Email</InputLabel>\n<Input onChange={(e) => onValueChange(e)} name='email' value={email} id=\"my-input\" aria-describedby=\"my-helper-text\" />\n</FormControl>\n<FormControl>\n<InputLabel htmlFor=\"my-input\">Phone</InputLabel>\n<Input onChange={(e) => onValueChange(e)} name='phone' value={phone} id=\"my-input\" aria-describedby=\"my-helper-text\" />\n</FormControl>\n<FormControl>\n<Button variant=\"contained\" color=\"primary\" onClick={() => editUserDetails()}>Edit User</Button>\n</FormControl>\n</FormGroup>\n</div>\n)\n}\n\nexport default Try;\n"]},"metadata":{},"sourceType":"module"}