{"ast":null,"code":"var _jsxFileName = \"/home/utsav.goel/Desktop/Reacttask/src/page/signup.js\",\n    _s = $RefreshSig$();\n\n// import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport React, { useEffect, useState } from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport Paper from '@mui/material/Paper';\nimport { Header } from \"../module/index\";\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { Validation } from \"../components/index\";\nimport { Password } from '@mui/icons-material';\nimport { Navigate } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Signup = () => {\n  _s();\n\n  // useEffect(()=>{\n  //   if(localStorage.getItem('Email', 'Password')){\n  //     Navigate.push('./dashboard')\n  //   }\n  // })\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(name, email, password);\n    const details = {\n      name: name,\n      email: email,\n      password: password\n    };\n    let storedDetails = localStorage.getItem('userDetails');\n\n    if (storedDetails == null) {\n      storedDetails = [];\n      storedDetails.push(details);\n      localStorage.setItem('userDetails', JSON.stringify(storedDetails));\n    } else {\n      let newDetail = JSON.parse(storedDetails);\n      newDetail.push(details);\n      localStorage.setItem(\"userDetails\", JSON.stringify(newDetail));\n      const token = \"jwt\";\n      localStorage.setItem(\"userToken\", token);\n      const message = \"Registered Successfully\";\n      navigator('/loginup', {\n        state: message\n      });\n    }\n\n    ;\n  };\n\n  const handleClose = () => {\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  const paperStyle = {\n    padding: \"10px 20px\",\n    width: 350,\n    margin: \"0px auto\"\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 20,\n      style: paperStyle,\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        component: \"main\",\n        maxWidth: \"xs\",\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            marginTop: 0,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            sx: {\n              m: 1,\n              bgcolor: 'secondary.main'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h1\",\n            variant: \"h5\",\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            component: \"form\",\n            noValidate: true,\n            sx: {\n              mt: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              sx: {\n                backgroundColor: 'lightgrey'\n              },\n              margin: \"normal\",\n              required: true,\n              fullWidth: true,\n              id: \"name\",\n              label: \"Name\",\n              name: \"name\",\n              onChange: event => setName(event.target.value),\n              autoComplete: \"name\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              sx: {\n                backgroundColor: 'lightgrey'\n              },\n              margin: \"normal\",\n              required: true,\n              fullWidth: true,\n              id: \"email\",\n              label: \"Email Address\",\n              name: \"email\",\n              onChange: event => setEmail(event.target.value),\n              autoComplete: \"email\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              sx: {\n                backgroundColor: 'lightgrey'\n              },\n              margin: \"normal\",\n              required: true,\n              fullWidth: true,\n              name: \"password\",\n              label: \"Password\",\n              type: \"password\",\n              id: \"password\",\n              onChange: event => setPassword(event.target.value),\n              autoComplete: \"current-password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                value: \"remember\",\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 24\n              }, this),\n              label: \"Remember me\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/loginup\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              onClick: handleFormSubmit,\n              fullWidth: true,\n              variant: \"contained\",\n              sx: {\n                mt: 3,\n                mb: 2\n              },\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Signup, \"U1DCtFSIKcmCKgpSr3L7jOg/618=\");\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/home/utsav.goel/Desktop/Reacttask/src/page/signup.js"],"names":["Link","React","useEffect","useState","Avatar","Button","Paper","Header","CssBaseline","TextField","FormControlLabel","Checkbox","Box","LockOutlinedIcon","Typography","Container","createTheme","ThemeProvider","Validation","Password","Navigate","Signup","name","setName","email","setEmail","password","setPassword","handleSubmit","e","preventDefault","console","log","details","storedDetails","localStorage","getItem","push","setItem","JSON","stringify","newDetail","parse","token","message","navigator","state","handleClose","paperStyle","padding","width","margin","marginTop","display","flexDirection","alignItems","m","bgcolor","mt","backgroundColor","event","target","value","handleFormSubmit","mb"],"mappings":"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","sourcesContent":["// import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport React, { useEffect, useState } from 'react'\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport Paper from '@mui/material/Paper';\nimport { Header } from \"../module/index\";\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport {Validation} from \"../components/index\";\nimport { Password } from '@mui/icons-material';\nimport { Navigate } from 'react-router';\n\n\nconst Signup=()=>{\n\n  // useEffect(()=>{\n  //   if(localStorage.getItem('Email', 'Password')){\n  //     Navigate.push('./dashboard')\n  //   }\n  // })\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(name, email, password);\n    const details = {name:name, email:email, password:password}\n\n    let storedDetails = localStorage.getItem('userDetails');\n    if(storedDetails==null){\n      storedDetails=[]\n      storedDetails.push(details);\n      localStorage.setItem('userDetails',JSON.stringify(storedDetails))\n    }else{\n      let newDetail = JSON.parse(storedDetails)\n      newDetail.push(details)\n      localStorage.setItem(\"userDetails\",JSON.stringify(newDetail))\n      const token = \"jwt\"\n      localStorage.setItem(\"userToken\",token);\n      const message = \"Registered Successfully\"\n      navigator('/loginup',{state:message})\n    };\n\n    }\n\n\n    const handleClose=()=>{\n      setName('');\n      setEmail('');\n      setPassword('')\n  }\n\n\n\n  const paperStyle={padding: \"10px 20px\", width:350, margin:\"0px auto\"}\n  return (\n <>\n  \n <Header/>\n\n<Paper elevation={20} style={paperStyle} >\n{/* {\" \"}\n          {loginup ? ( */}\n\n      <Container component=\"main\" maxWidth=\"xs\" onSubmit={handleSubmit}>\n      \n        <Box\n          sx={{\n            marginTop: 0,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n             \n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n         \n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <Box component=\"form\" noValidate sx={{ mt: 1 }}>\n          <TextField sx={{backgroundColor: 'lightgrey'}}\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"name\"\n              label=\"Name\"\n              name=\"name\"\n              onChange={(event) => setName(event.target.value)}\n              autoComplete=\"name\"\n              autoFocus\n            />\n               {/* {errors.name && <p className=\"error\">{errors.name}</p>} */}\n\n            <TextField sx={{backgroundColor: 'lightgrey'}}\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              onChange={(event) => setEmail(event.target.value)}\n              autoComplete=\"email\"\n              autoFocus\n            />\n            {/* {errors.email && <p className=\"error\">{errors.email}</p>} */}\n\n            <TextField sx={{backgroundColor: 'lightgrey'}}\n            \n            \n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              onChange={(event) => setPassword(event.target.value)}\n             \n            \n              autoComplete=\"current-password\"\n            />\n               {/* {errors.password && <p className=\"error\">{errors.password}</p>} */}\n\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            />\n          <Link to=\"/loginup\">Login</Link>\n            <Button\n              type=\"submit\"\n              onClick={handleFormSubmit}\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n             \n              Sign Up\n            </Button>\n \n\n\n       \n\n            {/* <Grid container>\n              <Grid item xs>\n                <Link href=\"#\" variant=\"body2\">\n                  Forgot password?\n                </Link>\n              </Grid>\n         \n              <Grid item>\n                <Link href=\"#\" variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid> */}\n          </Box>\n        </Box>\n        {/* <Copyright sx={{ mt: 8, mb: 4 }} /> */}\n       \n\n      </Container>\n        {/* )} */}\n      </Paper>\n\n                                  \n</>\n          \n  \n  );\n\n}\n\nexport default Signup;"]},"metadata":{},"sourceType":"module"}