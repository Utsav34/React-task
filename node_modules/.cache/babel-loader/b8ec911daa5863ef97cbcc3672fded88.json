{"ast":null,"code":"var _jsxFileName = \"/home/utsav.goel/Desktop/Reacttask/src/page/editUser.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { FormGroup, FormControl, InputLabel, Input, Button, makeStyles, Typography } from '@material-ui/core';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { getUsers, editUser } from '../api/get';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValue = {\n  name: '',\n  username: '',\n  email: '',\n  phone: ''\n};\nconst useStyles = makeStyles({\n  container: {\n    width: '50%',\n    margin: '5% 0 0 25%',\n    '& > *': {\n      marginTop: 20\n    }\n  }\n});\n\nconst EditUser = () => {\n  _s();\n\n  const [user, setUser] = useState(initialValue);\n  const {\n    name,\n    username,\n    email,\n    phone\n  } = user;\n  const {\n    id\n  } = useParams();\n  const classes = useStyles();\n  let navigator = useNavigate();\n  useEffect(() => {\n    loadUserDetails();\n  }, []);\n\n  const loadUserDetails = async () => {\n    const response = await getUsers(id);\n    setUser(response.data);\n  };\n\n  const editUserDetails = async () => {\n    const response = await editUser(id, user);\n    navigator.push('/all');\n  };\n\n  const onValueChange = e => {\n    console.log(e.target.value);\n    setUser({ ...user,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onClose: handleClose,\n    children: /*#__PURE__*/_jsxDEV(FormGroup, {\n      className: classes.container,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: \"Edit Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"my-input\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          onChange: e => onValueChange(e),\n          name: \"name\",\n          value: name,\n          id: \"my-input\",\n          \"aria-describedby\": \"my-helper-text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"my-input\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          onChange: e => onValueChange(e),\n          name: \"username\",\n          value: username,\n          id: \"my-input\",\n          \"aria-describedby\": \"my-helper-text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"my-input\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          onChange: e => onValueChange(e),\n          name: \"email\",\n          value: email,\n          id: \"my-input\",\n          \"aria-describedby\": \"my-helper-text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"my-input\",\n          children: \"Phone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          onChange: e => onValueChange(e),\n          name: \"phone\",\n          value: phone,\n          id: \"my-input\",\n          \"aria-describedby\": \"my-helper-text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: handleClickOpen,\n          children: [\"Add Detail\", /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: () => editUserDetails(),\n            children: \"Edit User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditUser, \"OuANjhZwBlFUZwDoP+buN/cr2y8=\", false, function () {\n  return [useParams, useStyles, useNavigate];\n});\n\n_c = EditUser;\nexport default EditUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditUser\");","map":{"version":3,"sources":["/home/utsav.goel/Desktop/Reacttask/src/page/editUser.js"],"names":["useState","useEffect","FormGroup","FormControl","InputLabel","Input","Button","makeStyles","Typography","useNavigate","useParams","getUsers","editUser","initialValue","name","username","email","phone","useStyles","container","width","margin","marginTop","EditUser","user","setUser","id","classes","navigator","loadUserDetails","response","data","editUserDetails","push","onValueChange","e","console","log","target","value","open","handleClose","handleClickOpen"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { FormGroup, FormControl, InputLabel, Input, Button, makeStyles, Typography } from '@material-ui/core';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { getUsers, editUser } from '../api/get';\n\nconst initialValue = {\n    name: '',\n    username: '',\n    email: '',\n    phone: ''\n}\n\nconst useStyles = makeStyles({\n    container: {\n        width: '50%',\n        margin: '5% 0 0 25%',\n        '& > *': {\n            marginTop: 20\n        }\n    }\n})\n\nconst EditUser = () => {\n    const [user, setUser] = useState(initialValue);\n    const { name, username, email, phone } = user;\n    const { id } = useParams();\n    const classes = useStyles();\n    let navigator = useNavigate();\n\n    useEffect(() => {\n        loadUserDetails();\n    }, []);\n\n    const loadUserDetails = async() => {\n        const response = await getUsers(id);\n        setUser(response.data);\n    }\n\n    const editUserDetails = async() => {\n        const response = await editUser(id, user);\n        navigator.push('/all');\n    }\n\n    const onValueChange = (e) => {\n        console.log(e.target.value);\n        setUser({...user, [e.target.name]: e.target.value})\n    }\n\n    return (\n        <Dialog open={open} onClose={handleClose}>\n        <FormGroup className={classes.container}>\n            <Typography variant=\"h4\">Edit Information</Typography>\n            <FormControl>\n                <InputLabel htmlFor=\"my-input\">Name</InputLabel>\n                <Input onChange={(e) => onValueChange(e)} name='name' value={name} id=\"my-input\" aria-describedby=\"my-helper-text\" />\n            </FormControl>\n            <FormControl>\n                <InputLabel htmlFor=\"my-input\">Username</InputLabel>\n                <Input onChange={(e) => onValueChange(e)} name='username' value={username} id=\"my-input\" aria-describedby=\"my-helper-text\" />\n            </FormControl>\n            <FormControl>\n                <InputLabel htmlFor=\"my-input\">Email</InputLabel>\n                <Input onChange={(e) => onValueChange(e)} name='email' value={email} id=\"my-input\" aria-describedby=\"my-helper-text\" />\n            </FormControl>\n            <FormControl>\n                <InputLabel htmlFor=\"my-input\">Phone</InputLabel>\n                <Input onChange={(e) => onValueChange(e)} name='phone' value={phone} id=\"my-input\" aria-describedby=\"my-helper-text\" />\n            </FormControl>\n            <FormControl>\n            <Button variant=\"outlined\" onClick={handleClickOpen}>\n      Add Detail\n      \n                <Button variant=\"contained\" color=\"primary\" onClick={() => editUserDetails()}>Edit User</Button>\n           </Button>\n            </FormControl>\n        </FormGroup>\n        </Dialog>\n    )\n}\n\nexport default EditUser;"]},"metadata":{},"sourceType":"module"}