{"ast":null,"code":"var _jsxFileName = \"/home/utsav.goel/Desktop/Reacttask/src/components/selfcounter.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SelfCounter = () => {\n  _s();\n\n  const [count, setCount] = useState(0);\n\n  const counter = () => {\n    let y = 0;\n    const interval = setInterval(() => {\n      if (y < 20) {\n        y = y + 1;\n      } else {\n        y = 0;\n        clearInterval(interval);\n      }\n\n      setCount(y);\n    }, 1000);\n  };\n\n  useEffect(() => {\n    counter();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Counts: \", count, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(SelfCounter, \"f6rNyXb4nKr8df0VUP2jADfsx6o=\");\n\n_c = SelfCounter;\nexport default SelfCounter;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelfCounter\");","map":{"version":3,"sources":["/home/utsav.goel/Desktop/Reacttask/src/components/selfcounter.js"],"names":["useEffect","useState","SelfCounter","count","setCount","counter","y","interval","setInterval","clearInterval"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;;AAEA,MAAMC,WAAW,GAAE,MAAI;AAAA;;AACnB,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAkBH,QAAQ,CAAC,CAAD,CAAhC;;AACA,QAAMI,OAAO,GAAE,MAAI;AACf,QAAIC,CAAC,GAAE,CAAP;AACA,UAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAI;AAC7B,UAAGF,CAAC,GAAC,EAAL,EAAQ;AACJA,QAAAA,CAAC,GAAEA,CAAC,GAAC,CAAL;AACH,OAFD,MAGI;AACAA,QAAAA,CAAC,GAAC,CAAF;AACAG,QAAAA,aAAa,CAACF,QAAD,CAAb;AACH;;AACDH,MAAAA,QAAQ,CAACE,CAAD,CAAR;AACH,KAT2B,EAS1B,IAT0B,CAA5B;AAUH,GAZD;;AAaAN,EAAAA,SAAS,CAAC,MAAI;AACVK,IAAAA,OAAO;AACV,GAFQ,EAEP,EAFO,CAAT;AAGA,sBACI;AAAA,2BACI;AAAA,6BAAaF,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAKH,CAvBD;;GAAMD,W;;KAAAA,W;AAwBN,eAAeA,WAAf","sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst SelfCounter =()=>{\n    const [count,setCount] =useState(0);\n    const counter =()=>{\n        let y= 0;\n        const interval = setInterval(()=>{\n            if(y<20){\n                y= y+1;\n            }\n            else{\n                y=0\n                clearInterval(interval);\n            }\n            setCount(y);\n        },1000)\n    }\n    useEffect(()=>{\n        counter();\n    },[])\n    return(\n        <>\n            <h1>Counts: {count} </h1>\n        </>\n    )\n}\nexport default SelfCounter;"]},"metadata":{},"sourceType":"module"}