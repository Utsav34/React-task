{"ast":null,"code":"var _jsxFileName = \"/home/utsav.goel/Desktop/Reacttask/src/page/signup.js\",\n    _s = $RefreshSig$();\n\n// import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport React, { useEffect, useState } from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport Paper from '@mui/material/Paper';\nimport { Header } from \"../module/index\";\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { useLocation, useNavigate } from \"react-router\";\nimport { Validation } from '../components/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Signup = () => {\n  _s();\n\n  // useEffect(()=>{\n  //   if(localStorage.getItem('registerData')){\n  //     navigator('./signup')\n  //   }\n  // },[])\n  const navigator = useNavigate();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault(); // setErrors(Validation(values));\n\n    console.log(name, email, password);\n    const details = {\n      name: name,\n      email: email,\n      password: password\n    }; // getItem function use to retrieve data from LocalStorage\n\n    let signupData = localStorage.getItem('registerData');\n\n    if (signupData == null) {\n      signupData = [];\n      signupData.push(details);\n      localStorage.setItem('registerData', JSON.stringify(signupData));\n    } else {\n      let newDetail = JSON.parse(signupData);\n      newDetail.push(details);\n      e.preventDefault();\n      localStorage.setItem(\"registerData\", JSON.stringify(newDetail));\n    }\n\n    ;\n    const message = \"Registered Successfully\";\n    navigator('/loginup', {\n      state: message\n    });\n  }; //   const handleClose=()=>{\n  //     setName('');\n  //     setEmail('');\n  //     setPassword('')\n  // }\n\n\n  const paperStyle = {\n    padding: \"10px 20px\",\n    width: 350,\n    margin: \"0px auto\"\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 20,\n      style: paperStyle,\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        component: \"main\",\n        maxWidth: \"xs\",\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            marginTop: 0,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            sx: {\n              m: 1,\n              bgcolor: 'secondary.main'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h1\",\n            variant: \"h5\",\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            component: \"form\",\n            noValidate: true,\n            sx: {\n              mt: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              sx: {\n                backgroundColor: 'lightgrey'\n              },\n              margin: \"normal\",\n              required: true,\n              fullWidth: true,\n              id: \"name\",\n              label: \"Name\",\n              name: \"name\",\n              value: name,\n              onChange: e => setName(e.target.value),\n              autoComplete: \"name\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              sx: {\n                backgroundColor: 'lightgrey'\n              },\n              margin: \"normal\",\n              required: true,\n              fullWidth: true,\n              id: \"email\",\n              label: \"Email Address\",\n              name: \"email\" // validate={validateEmail}\n              ,\n              value: email,\n              onChange: e => setEmail(e.target.value),\n              autoComplete: \"email\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              sx: {\n                backgroundColor: 'lightgrey'\n              },\n              margin: \"normal\",\n              required: true,\n              fullWidth: true,\n              name: \"password\",\n              label: \"Password\",\n              type: \"password\",\n              id: \"password\",\n              value: password,\n              onChange: e => setPassword(e.target.value),\n              autoComplete: \"current-password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                value: \"remember\",\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 24\n              }, this),\n              label: \"Remember me\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              fullWidth: true,\n              variant: \"contained\",\n              sx: {\n                mt: 3,\n                mb: 2\n              },\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 1\n    }, this)\n  }, void 0, false);\n};\n\n_s(Signup, \"2CqbSMUD6vKGc/yALstlq0FFzJs=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/home/utsav.goel/Desktop/Reacttask/src/page/signup.js"],"names":["Link","React","useEffect","useState","Avatar","Button","Paper","Header","TextField","FormControlLabel","Checkbox","Box","Typography","Container","useLocation","useNavigate","Validation","Signup","navigator","name","setName","email","setEmail","password","setPassword","handleSubmit","e","preventDefault","console","log","details","signupData","localStorage","getItem","push","setItem","JSON","stringify","newDetail","parse","message","state","paperStyle","padding","width","margin","marginTop","display","flexDirection","alignItems","m","bgcolor","mt","backgroundColor","target","value","mb"],"mappings":"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","sourcesContent":["// import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport React, { useEffect, useState } from 'react'\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport Paper from '@mui/material/Paper';\nimport { Header } from \"../module/index\";\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { useLocation, useNavigate} from \"react-router\";\nimport { Validation  } from '../components/index';\n\n\nconst Signup=()=>{\n\n  // useEffect(()=>{\n  //   if(localStorage.getItem('registerData')){\n  //     navigator('./signup')\n  //   }\n  // },[])\n\n  const navigator = useNavigate();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // setErrors(Validation(values));\n    console.log(name, email, password);\n    const details = {name:name, email:email, password:password}\n\n// getItem function use to retrieve data from LocalStorage\n    let signupData = localStorage.getItem('registerData');\n    if(signupData==null){\n      signupData=[]\n      signupData.push(details);\n      localStorage.setItem('registerData',JSON.stringify(signupData))\n    }else{\n      let newDetail = JSON.parse(signupData)\n      newDetail.push(details)\n      e.preventDefault();\n      localStorage.setItem(\"registerData\",JSON.stringify(newDetail))\n     \n    };\n    const message = \"Registered Successfully\";\n    navigator('/loginup',{state:message})\n    }\n  \n\n  //   const handleClose=()=>{\n  //     setName('');\n  //     setEmail('');\n  //     setPassword('')\n  // }\n  const paperStyle={padding: \"10px 20px\", width:350, margin:\"0px auto\"}\n \n  return (\n <>\n {/* <Header/> */}\n<Paper elevation={20} style={paperStyle} >\n      <Container component=\"main\" maxWidth=\"xs\" onSubmit={handleSubmit}>\n        <Box\n          sx={{\n            marginTop: 0,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}>\n             <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <Box component=\"form\" noValidate sx={{ mt: 1 }}>\n          <TextField sx={{backgroundColor: 'lightgrey'}}\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"name\"\n              label=\"Name\"\n              name=\"name\"\n              value={name}\n              onChange={e => setName(e.target.value)}\n              autoComplete=\"name\"\n              autoFocus/>\n               {/* {errors.name && <p className=\"error\">{errors.name}</p>} */}\n\n            <TextField sx={{backgroundColor: 'lightgrey'}}\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              // validate={validateEmail}\n              value={email}\n              onChange={e => setEmail(e.target.value)}\n              autoComplete=\"email\"\n              autoFocus\n            />\n           \n             {/* {errors.email && <p className=\"error\">{errors.email}</p>} */}\n\n            <TextField sx={{backgroundColor: 'lightgrey'}}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              value={password}\n              onChange={e => setPassword(e.target.value)}\n              autoComplete=\"current-password\"/>\n               {/* {errors.password && <p className=\"error\">{errors.password}</p>} */}\n         \n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\" />\n      \n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }} >\n              Sign Up\n            </Button>\n          </Box>\n        </Box>\n      </Container>\n      </Paper>                            \n</> \n  );\n}\nexport default Signup;"]},"metadata":{},"sourceType":"module"}