{"ast":null,"code":"var _jsxFileName = \"/home/utsav.goel/Desktop/Reacttask/src/page/theme.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, createContext, useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const themes = {\n  light: {\n    foreground: \"red\",\n    background: \"pink\"\n  },\n  dark: {\n    foreground: \"red\",\n    background: \"green\"\n  }\n};\nconst initialState = {\n  theme: themes.light,\n  setTheme: () => {}\n};\nconst ThemeContext = /*#__PURE__*/createContext(initialState);\nexport const ThemeProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [theme, setTheme] = useState(themes.light);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      setTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ThemeProvider, \"5IR7NF08hS1O0qqS7UthgDFpkEo=\");\n\n_c = ThemeProvider;\n\nconst useTheme = () => {\n  _s2();\n\n  const context = useContext(ThemeContext);\n\n  if (context === undefined) {\n    throw new Error(\"useTheme must be used within a ThemeProvider\");\n  }\n\n  return context;\n};\n\n_s2(useTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nexport default useTheme;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"sources":["/home/utsav.goel/Desktop/Reacttask/src/page/theme.js"],"names":["React","useState","createContext","useContext","themes","light","foreground","background","dark","initialState","theme","setTheme","ThemeContext","ThemeProvider","children","useTheme","context","undefined","Error"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,EAAyCC,UAAzC,QAA2D,OAA3D;;AAEA,OAAO,MAAMC,MAAM,GAAG;AACpBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,UAAU,EAAE,KADP;AAELC,IAAAA,UAAU,EAAE;AAFP,GADa;AAKpBC,EAAAA,IAAI,EAAE;AACJF,IAAAA,UAAU,EAAE,KADR;AAEJC,IAAAA,UAAU,EAAE;AAFR;AALc,CAAf;AAWP,MAAME,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAEN,MAAM,CAACC,KADK;AAEnBM,EAAAA,QAAQ,EAAE,MAAM,CAAE;AAFC,CAArB;AAKA,MAAMC,YAAY,gBAAGV,aAAa,CAACO,YAAD,CAAlC;AAEA,OAAO,MAAMI,aAAa,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC7C,QAAM,CAACJ,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAACG,MAAM,CAACC,KAAR,CAAlC;AACA,sBACE,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEK,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAA9B;AAAA,cACGG;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAPM;;GAAMD,a;;KAAAA,a;;AASb,MAAME,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAMC,OAAO,GAAGb,UAAU,CAACS,YAAD,CAA1B;;AAEA,MAAII,OAAO,KAAKC,SAAhB,EAA2B;AACzB,UAAM,IAAIC,KAAJ,CAAU,8CAAV,CAAN;AACD;;AACD,SAAOF,OAAP;AACD,CAPD;;IAAMD,Q;;AASN,eAAeA,QAAf","sourcesContent":["import React, { useState, createContext, useContext } from \"react\";\n\nexport const themes = {\n  light: {\n    foreground: \"red\",\n    background: \"pink\"\n  },\n  dark: {\n    foreground: \"red\",\n    background: \"green\"\n  }\n};\n\nconst initialState = {\n  theme: themes.light,\n  setTheme: () => {}\n};\n\nconst ThemeContext = createContext(initialState);\n\nexport const ThemeProvider = ({ children }) => {\n  const [theme, setTheme] = useState(themes.light);\n  return (\n    <ThemeContext.Provider value={{ theme, setTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nconst useTheme = () => {\n  const context = useContext(ThemeContext);\n\n  if (context === undefined) {\n    throw new Error(\"useTheme must be used within a ThemeProvider\");\n  }\n  return context;\n};\n\nexport default useTheme;\n"]},"metadata":{},"sourceType":"module"}